//=============================================================================
//
// レンダリング処理 [renderer.cpp]
// Author : 筒井 俊稀
//
//=============================================================================
#include "player.h"
#include "manager.h"
#include "input.h"
#include "renderer.h"

//=============================================================================
// 静的メンバ変数初期化
//=============================================================================
LPDIRECT3DTEXTURE9 CPlayer::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CPlayer::CPlayer()
{
	m_pos = D3DXVECTOR3();
	m_size = D3DXVECTOR3();
	m_rot = D3DXVECTOR3();
	m_col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
}

//=============================================================================
// デストラクタ
//=============================================================================
CPlayer::~CPlayer()
{
}

//=============================================================================
// 生成処理
//=============================================================================
CPlayer * CPlayer::Create(const D3DXVECTOR3 pos, const D3DXVECTOR3 size)
{
	CPlayer *pPlayer = new CPlayer;
	if (pPlayer != NULL)
	{
		pPlayer->SetPos(pos);
		pPlayer->SetSize(size);
		pPlayer->Init();
	}
	return pPlayer;
}

//=============================================================================
// テクスチャロード処理
//=============================================================================
HRESULT CPlayer::Load(void)
{
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	////テクスチャの読み込み
	//D3DXCreateTextureFromFile(pDevice, TEXTURE_PLAYER, &m_pTexture);

	return S_OK;
}

//=============================================================================
// テクスチャ破棄処理
//=============================================================================
void CPlayer::Unload(void)
{
	//テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CPlayer::Init(void)
{
	CScene3d::Init();
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CPlayer::Uninit(void)
{
	CScene3d::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CPlayer::Update(void)
{
	m_pos = CScene3d::GetPos();
	SetPos(m_pos);
}

//=============================================================================
// 描画処理
//=============================================================================
void CPlayer::Draw(void)
{
	CScene3d::Draw();
}
